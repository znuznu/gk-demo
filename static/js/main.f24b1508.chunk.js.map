{"version":3,"sources":["fonts/fonts.js","services/grid.service.js","components/ContentContainer/View2D/View2D.jsx","components/ContentContainer/Algorithms/Algorithms.jsx","components/ContentContainer/Result/Result.jsx","components/ContentContainer/ContentContainer.jsx","services/algorithm.service.js","components/Header/Title/Title.jsx","components/Header/Header.jsx","components/Explanation/Explanation.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["Fonts","styles","COLORS","View2D","props","grid","manageClickSelection","algorithmResult","canvasRef","useRef","useState","undefined","draw","setDraw","hoveredCell","setHoveredCell","tileSize","useEffect","context","current","getContext","fillRect","canvas","width","height","Groolkit","n","drawGrid","result","drawResult","x","y","fillStyle","globalAlpha","drawPointer","type","drawPath","drawFov","drawLine","drawFill","Error","eventToCellPosition","event","getCanvasPosition","clientX","clientY","canvasX","canvasY","getCellPosition","rect","getBoundingClientRect","left","top","_hover","cursor","ref","onClick","onPointerMove","onPointerOut","Algorithms","changeAlgorithm","maxW","fontWeight","size","onChange","e","target","value","defaultValue","mt","label","options","name","map","groups","Result","p","bgColor","ml","status","as","positions","overflow","maxH","position","whiteSpace","display","ContentContainer","row","push","col","Math","random","generate","clickSelection","setClickSelection","setAlgorithmResult","PATH","length","pathResult","algorithmName","callback","path","AStar","Dijkstra","init","start","end","search","processPath","ar","FOV","fovResult","fov","RecursiveShadowCasting","compute","processFov","LINE","lineResult","line","LineLerp","process","processLine","FILL","fillResult","fill","FloodFill","processFill","mx","borderRadius","borderWidth","mr","algorithm","algorithmType","includes","variant","colorScheme","Title","title","version","mb","Header","borderTop","borderColor","justifyContent","Explanation","justify","href","aria-label","isExternal","color","ExternalLink","my","Footer","flexDir","FaGithub","w","h","fontStyle","theme","extendTheme","fonts","heading","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f24b1508.chunk.js","sourcesContent":["import React from 'react';\nimport { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n        /* cyrillic-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvHUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n        }\n        /* cyrillic */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvOUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n        }\n        /* vietnamese */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvFUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n        }\n        /* latin-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvEUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n        }\n        /* latin */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvKUT8.woff2) format('woff2');\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n        }\n        /* cyrillic-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUbOvISTs.woff2) format('woff2');\n          unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n        }\n        /* cyrillic */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUZevISTs.woff2) format('woff2');\n          unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n        }\n        /* vietnamese */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUbuvISTs.woff2) format('woff2');\n          unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n        }\n        /* latin-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUb-vISTs.woff2) format('woff2');\n          unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n        }\n        /* latin */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUYevI.woff2) format('woff2');\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n        }\n      `}\n  />\n);\n","// Provided by Groolkit soon\n\n// export it from Groolkit?\nexport const COLORS = {\n  HOVER: 'firebrick',\n  BLOCK: 'grey',\n  PASSAGE: 'white',\n  LINE: 'black',\n  BG: 'white',\n  START: 'pink',\n  END: 'green',\n  PATH: 'yellow',\n  FILL: 'lightblue',\n  LINE_ALGORITHM: 'red',\n  FOV: 'wheat',\n};\n\n// Generate a grid with random 0 and 1.\nexport const generate = (height, width) => {\n  let grid = [];\n\n  for (let row = 0; row < height; row++) {\n    grid.push([]);\n    for (let col = 0; col < width; col++) {\n      grid[row].push(Math.random() <= 0.2 ? 1 : 0);\n    }\n  }\n\n  return grid;\n};\n","import * as Groolkit from '@znuznu/groolkit';\n\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef, useState } from 'react';\n\nimport { Box } from '@chakra-ui/react';\n\nimport { COLORS } from 'services/grid.service';\n\nconst View2D = (props) => {\n  const { grid, manageClickSelection, algorithmResult } = props;\n\n  const canvasRef = useRef(null);\n\n  const [draw, setDraw] = useState(undefined);\n  const [hoveredCell, setHoveredCell] = useState(undefined);\n  const [tileSize, setTileSize] = useState(16);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  }, []);\n\n  useEffect(() => {\n    if (grid && canvasRef.current.getContext('2d')) {\n      setDraw(\n        new Groolkit.Draw(canvasRef.current.getContext('2d'), grid, (n) => n, {\n          width: tileSize,\n          height: tileSize,\n        })\n      );\n    }\n  }, [grid, tileSize]);\n\n  useEffect(() => {\n    if (draw) {\n      draw.drawGrid();\n    }\n  }, [draw]);\n\n  useEffect(() => {\n    const drawPointer = () => {\n      const x = hoveredCell.x;\n      const y = hoveredCell.y;\n\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.fillStyle = COLORS.HOVER;\n      context.globalAlpha = 0.4;\n      context.fillRect(y * tileSize, x * tileSize, tileSize, tileSize);\n      context.globalAlpha = 1;\n    };\n\n    if (hoveredCell) {\n      draw.drawGrid();\n      if (algorithmResult.result) {\n        drawResult();\n      }\n      drawPointer();\n    }\n  }, [hoveredCell, tileSize]);\n\n  useEffect(() => {\n    if (algorithmResult.result) {\n      drawResult();\n    }\n  }, [algorithmResult]);\n\n  const drawResult = () => {\n    const type = algorithmResult.type;\n    const result = algorithmResult.result;\n\n    switch (type) {\n      case 'PATH':\n        draw.drawPath(result);\n        break;\n      case 'FOV':\n        draw.drawFov(result);\n        break;\n      case 'LINE':\n        draw.drawLine(result);\n        break;\n      case 'FILL':\n        draw.drawFill(result);\n        break;\n      default:\n        throw new Error(`No such algorithm type: '${type}'`);\n    }\n  };\n\n  const eventToCellPosition = (event) => {\n    const [canvasX, canvasY] = getCanvasPosition(event.clientX, event.clientY);\n    return getCellPosition(canvasY, canvasX);\n  };\n\n  const handleClick = (event) => {\n    const [x, y] = eventToCellPosition(event);\n    manageClickSelection(x, y);\n  };\n\n  const handleMov = (event) => {\n    const [x, y] = eventToCellPosition(event);\n\n    const isSet = hoveredCell;\n    if (!isSet || hoveredCell.x !== x || hoveredCell.y !== y) {\n      setHoveredCell({ x, y });\n    }\n  };\n\n  const handleOutCanvas = () => {\n    setHoveredCell(undefined);\n  };\n\n  const getCanvasPosition = (clientX, clientY) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const canvasX = clientX - rect.left;\n    const canvasY = clientY - rect.top;\n\n    return [canvasX, canvasY];\n  };\n\n  const getCellPosition = (canvasX, canvasY) => {\n    let x = ~~(canvasX / tileSize);\n    let y = ~~(canvasY / tileSize);\n\n    return [x, y];\n  };\n\n  return (\n    <>\n      <Box _hover={{ cursor: 'pointer' }}>\n        <canvas\n          ref={canvasRef}\n          onClick={handleClick}\n          onPointerMove={handleMov}\n          onPointerOut={handleOutCanvas}\n        />\n      </Box>\n    </>\n  );\n};\n\nView2D.propTypes = {\n  grid: PropTypes.array.isRequired,\n  manageClickSelection: PropTypes.func.isRequired,\n  algorithmResult: PropTypes.object.isRequired,\n};\n\nexport default View2D;\n","import React from 'react';\n\nimport { Box, Select, Text } from '@chakra-ui/react';\n\nconst Algorithms = (props) => {\n  const { changeAlgorithm } = props;\n\n  const handleChange = (e) => {\n    changeAlgorithm(e.target.value);\n  };\n\n  const optgroups = [\n    {\n      label: 'FOV',\n      options: [{ value: 'rsc', name: 'Recursive Shadow Casting' }],\n    },\n    {\n      label: 'Path',\n      options: [\n        { value: 'astar4', name: 'A* (Orthogonal)' },\n        { value: 'astar8', name: 'A* (Diagonal)' },\n        { value: 'dijkstra4', name: 'Dijkstra (Orthogonal)' },\n        { value: 'dijkstra8', name: 'Dijkstra (Diagonal)' },\n      ],\n    },\n    {\n      label: 'Filling',\n      options: [{ value: 'flood', name: 'Flood filling' }],\n    },\n    {\n      label: 'Line',\n      options: [{ value: 'lerp', name: 'Linear interpolation' }],\n    },\n  ];\n\n  return (\n    <Box maxW=\"sm\">\n      <Text fontWeight=\"bold\">Algorithm</Text>\n      <Select size=\"md\" onChange={handleChange} defaultValue=\"astar4\" mt={1}>\n        {optgroups.map((groups) => (\n          <optgroup key={groups.label} label={groups.label}>\n            {groups.options.map((options) => (\n              <option key={options.value} value={options.value}>\n                {options.name}\n              </option>\n            ))}\n          </optgroup>\n        ))}\n      </Select>\n    </Box>\n  );\n};\n\nexport default Algorithms;\n","import React, { useState, useEffect } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Box, Code, Flex, Text } from '@chakra-ui/react';\n\nconst Result = (props) => {\n  const { result } = props;\n\n  return (\n    <>\n      {result && (\n        <Box mt={3}>\n          <Text fontWeight=\"bold\">Result</Text>\n          <Box p={1} bgColor=\"gray.100\">\n            <Code>{`{`}</Code>\n            <Box ml={4}>\n              {result.status && (\n                <Flex>\n                  <Code>\n                    <Box as=\"span\" fontWeight=\"bold\">\n                      status:\n                    </Box>{' '}\n                    {result.status}\n                  </Code>\n                </Flex>\n              )}\n              {result && result.positions && (\n                <>\n                  <Code fontWeight=\"bold\">positions:</Code>\n                  <Box bgColor=\"gray.100\" overflow=\"auto\" maxH=\"200px\">\n                    <Code>[</Code>\n                    {result.positions.map((position) => (\n                      <Code\n                        whiteSpace=\"pre-wrap\"\n                        display=\"block\"\n                        key={`x-${position.x},y-${position.y}`}\n                      >\n                        {`  { x: ${position.x}, y: ${position.y} }`}\n                      </Code>\n                    ))}\n                    <Code>]</Code>\n                  </Box>\n                </>\n              )}\n            </Box>\n            <Code>{`}`}</Code>\n          </Box>\n        </Box>\n      )}\n    </>\n  );\n};\n\nResult.propTypes = {\n  result: PropTypes.object,\n};\n\nexport default Result;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  Box,\n  Flex,\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n  TabPanels,\n} from '@chakra-ui/react';\n\nimport {\n  processFill,\n  processFov,\n  processLine,\n  processPath,\n} from 'services/algorithm.service';\n\nimport { getAlgorithmObject } from 'services/algorithm.service';\n\nimport View2D from './View2D/View2D';\nimport Algorithms from './Algorithms/Algorithms';\nimport { generate } from 'services/grid.service';\nimport Result from './Result/Result';\n\nconst ContentContainer = () => {\n  const [grid, setGrid] = useState(generate(30, 30));\n  const [clickSelection, setClickSelection] = useState([]);\n  const [algorithmResult, setAlgorithmResult] = useState({\n    type: 'PATH',\n    name: 'astar4',\n    result: undefined,\n  });\n\n  useEffect(() => {\n    const handlePath = () => {\n      if (clickSelection.length !== 2) {\n        return;\n      }\n\n      const pathResult = processPath({\n        algorithmName: algorithmResult.name,\n        grid,\n        callback: (n) => n,\n        positions: clickSelection,\n      });\n\n      setAlgorithmResult((ar) => ({ ...ar, result: pathResult }));\n    };\n\n    const handleLine = () => {\n      if (clickSelection.length !== 2) {\n        return;\n      }\n\n      const lineResult = processLine({\n        algorithmName: algorithmResult.name,\n        grid,\n        callback: (n) => n,\n        positions: clickSelection,\n      });\n\n      setAlgorithmResult((ar) => ({ ...ar, result: lineResult }));\n    };\n\n    const handleFov = () => {\n      if (!clickSelection.length) {\n        return;\n      }\n\n      const fovResult = processFov({\n        algorithmName: algorithmResult.name,\n        grid,\n        callback: (n) => !n,\n        position: clickSelection[0],\n      });\n\n      setAlgorithmResult((ar) => ({ ...ar, result: fovResult }));\n    };\n\n    const handleFill = () => {\n      if (!clickSelection.length) {\n        return;\n      }\n\n      const fillResult = processFill({\n        algorithmName: algorithmResult.name,\n        grid,\n        callback: (n) => n === 0,\n        position: clickSelection[0],\n      });\n\n      setAlgorithmResult((ar) => ({ ...ar, result: fillResult }));\n    };\n\n    const handle = {\n      PATH: handlePath,\n      FOV: handleFov,\n      LINE: handleLine,\n      FILL: handleFill,\n    };\n\n    handle[algorithmResult.type]();\n  }, [algorithmResult.name, algorithmResult.type, clickSelection]);\n\n  const changeAlgorithm = (algorithm) => {\n    const algorithmType = getAlgorithmObject(algorithm);\n    setAlgorithmResult({ ...algorithmType, result: undefined });\n  };\n\n  const manageClickSelection = (x, y) => {\n    const isTwoClicksAlgorithm =\n      algorithmResult.type === 'PATH' || algorithmResult.type === 'LINE';\n\n    if (isTwoClicksAlgorithm) {\n      if (clickSelection.length !== 2) {\n        setClickSelection((clickSelection) => [...clickSelection, { x, y }]);\n      } else {\n        setClickSelection((clickSelection) => [clickSelection[1], { x, y }]);\n      }\n    } else {\n      setClickSelection([{ x, y }]);\n    }\n  };\n\n  return (\n    <Box mx=\"auto\" borderRadius=\"lg\" borderWidth=\"1px\" mt={5} p={5}>\n      <Flex mx=\"auto\">\n        <Box mr={5}>\n          <Algorithms changeAlgorithm={changeAlgorithm} />\n          <Result result={algorithmResult.result} />\n        </Box>\n        <Tabs variant=\"soft-rounded\" colorScheme=\"red\">\n          <TabList>\n            <Tab>2D</Tab>\n          </TabList>\n\n          <TabPanels>\n            <TabPanel>\n              <View2D\n                grid={grid}\n                manageClickSelection={manageClickSelection}\n                algorithmResult={algorithmResult}\n              />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default ContentContainer;\n","import * as Groolkit from '@znuznu/groolkit';\n\n/**\n * Return an object containing the algorithm name and his type.\n *\n * @param {string} algorithmName\n */\nexport const getAlgorithmObject = (algorithmName) => {\n  const paths = ['astar4', 'astar8', 'dijkstra4', 'dijkstra8'];\n  const fovs = ['rsc'];\n  const lines = ['lerp'];\n  const fill = ['flood'];\n\n  if (paths.includes(algorithmName)) {\n    return { name: algorithmName, type: 'PATH' };\n  } else if (fovs.includes(algorithmName)) {\n    return { name: algorithmName, type: 'FOV' };\n  } else if (lines.includes(algorithmName)) {\n    return { name: algorithmName, type: 'LINE' };\n  } else if (fill.includes(algorithmName)) {\n    return { name: algorithmName, type: 'FILL' };\n  }\n};\n\n// FIXME: replace the switches below by something sexy\n\nexport const processPath = ({ algorithmName, grid, callback, positions }) => {\n  let path = undefined;\n\n  switch (algorithmName) {\n    case 'astar4':\n      path = new Groolkit.Path.AStar(grid, { type: 4 }, callback);\n      break;\n    case 'astar8':\n      path = new Groolkit.Path.AStar(grid, { type: 8 }, callback);\n      break;\n    case 'dijkstra4':\n      path = new Groolkit.Path.Dijkstra(grid, { type: 4 }, callback);\n      break;\n    case 'dijkstra8':\n      path = new Groolkit.Path.Dijkstra(grid, { type: 8 }, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  path.init();\n  const start = positions[0];\n  const end = positions[1];\n\n  return path.search(start, end);\n};\n\nexport const processFov = ({ algorithmName, grid, callback, position }) => {\n  let fov = undefined;\n\n  switch (algorithmName) {\n    case 'rsc':\n      fov = new Groolkit.FOV.RecursiveShadowCasting(grid, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  return fov.compute(position);\n};\n\nexport const processLine = ({ algorithmName, grid, callback, positions }) => {\n  let line = undefined;\n\n  switch (algorithmName) {\n    case 'lerp':\n      line = new Groolkit.Line.LineLerp(grid, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  return line.process(positions[0], positions[1]);\n};\n\nexport const processFill = ({ algorithmName, grid, callback, position }) => {\n  let fill = undefined;\n\n  switch (algorithmName) {\n    case 'flood':\n      fill = new Groolkit.Fill.FloodFill(grid, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  return fill.process(position);\n};\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Badge, Box, Heading } from '@chakra-ui/react';\n\nconst Title = (props) => {\n  const { title, version } = props;\n\n  return (\n    <>\n      <Box>\n        <Heading as=\"h1\" display=\"inline\" mb={10}>\n          {title}\n        </Heading>\n        <Badge ml={1} colorScheme=\"red\">\n          {version}\n        </Badge>\n      </Box>\n    </>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  version: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\n\nimport { Box, Flex } from '@chakra-ui/react';\n\nimport Title from './Title/Title';\n\nconst Header = () => {\n  return (\n    <Box mx=\"auto\" borderTop=\"8px solid\" borderColor=\"red.700\">\n      <Flex mt={3} justifyContent=\"center\">\n        <Title title=\"Groolkit library demo\" version=\"0.9.1\" />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport { Code, Link, Text } from '@chakra-ui/react';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\n\nconst Explanation = () => {\n  return (\n    <>\n      <Text mt={5} mx=\"auto\" justify=\"center\">\n        <Code>Groolkit</Code> is a JavaScript library with a bunch of algorithms\n        related to grids.\n      </Text>\n      <Text mt={5} mx=\"auto\" justify=\"center\">\n        The repository is available{' '}\n        <Link\n          href=\"https://github.com/znuznu/groolkit\"\n          aria-label=\"Link to the Groolkit Github repository\"\n          isExternal\n          color=\"red.700\"\n        >\n          here\n          <ExternalLinkIcon mx=\"2px\" my=\"auto\" />\n        </Link>\n        .\n      </Text>\n    </>\n  );\n};\n\nexport default Explanation;\n","import React from 'react';\n\nimport { Flex, Icon, Text, Link } from '@chakra-ui/react';\nimport { FaGithub } from 'react-icons/fa';\n\nconst Footer = () => {\n  return (\n    <>\n      <Flex my={5} justify=\"center\" flexDir=\"column\">\n        <Flex justify=\"center\" mb={3}>\n          <Link\n            href=\"https://github.com/znuznu/gk-demo\"\n            aria-label=\"Link to the gk-demo Github repository\"\n            my=\"auto\"\n            mr={2}\n            isExternal\n          >\n            <Icon\n              as={FaGithub}\n              w={8}\n              h={8}\n              color=\"lightgrey\"\n              _hover={{ color: '#222222' }}\n            />\n          </Link>\n        </Flex>\n        <Flex justify=\"center\">\n          <Text fontStyle=\"italic\" size=\"12px\" mb={5}>\n            Groolkit is Copyright (c) - znu under MIT license\n          </Text>\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { ChakraProvider, Container, extendTheme, Flex } from '@chakra-ui/react';\n\nimport { Fonts } from 'fonts/fonts';\n\nimport ContentContainer from 'components/ContentContainer/ContentContainer';\nimport Header from 'components/Header/Header';\nimport Explanation from 'components/Explanation/Explanation';\nimport Footer from 'components/Footer/Footer';\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Nunito',\n  },\n});\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Fonts />\n      <Header />\n      <Container justifyContent=\"center\" h=\"100%\" maxW=\"6xl\">\n        <Flex flexDir=\"column\">\n          <Explanation />\n          <ContentContainer />\n          <Footer />\n        </Flex>\n      </Container>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}