{"version":3,"sources":["fonts/fonts.js","contexts/AlgorithmContext.jsx","services/grid.service.js","components/Content/View/View.jsx","services/algorithm.service.js","components/Content/Algorithms/Algorithms.jsx","components/Content/Content.jsx","components/Header/Title/Title.jsx","components/Header/Header.jsx","components/Explanation/Explanation.jsx","components/Footer/Footer.jsx","App.js","index.js"],"names":["Fonts","styles","AlgorithmContext","React","createContext","undefined","COLORS","View","canvasRef","useRef","currentAlgorithm","useContext","useState","clickSelection","setClickSelection","height","width","grid","row","push","col","Math","random","generate","draw","setDraw","currentPointerCell","setCurrentPointerCell","tileSize","useEffect","context","current","getContext","fillRect","canvas","Groolkit","n","drawGrid","handleDefault","PATH","handlePath","FOV","handleFov","LINE","handleLine","FILL","handleFill","type","x","y","fillStyle","globalAlpha","length","result","algorithmName","callback","positions","path","AStar","Dijkstra","Error","init","start","end","search","processPath","name","drawPath","lineResult","line","LineLerp","process","processLine","drawLine","fovResult","position","fov","RecursiveShadowCasting","compute","processFov","drawFov","fillResult","fill","FloodFill","processFill","drawFill","handleClick","event","getCanvasPosition","clientX","clientY","canvasX","canvasY","getCellPosition","handleMov","handleOut","rect","getBoundingClientRect","left","top","Consumer","value","_hover","cursor","ref","onClick","onPointerMove","onPointerOut","Algorithms","props","changeAlgorithm","maxW","as","size","display","onChange","e","target","defaultValue","mt","label","options","map","groups","Content","setCurrentAlgorithm","mx","borderRadius","borderWidth","p","mr","algorithm","includes","Provider","Title","title","version","mb","ml","colorScheme","Header","borderTop","borderColor","justifyContent","Explanation","justify","href","aria-label","isExternal","color","ExternalLink","my","Footer","flexDir","FaGithub","w","h","fontStyle","theme","extendTheme","fonts","heading","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4af99400.chunk.js","sourcesContent":["import React from 'react';\nimport { Global } from '@emotion/react';\n\nexport const Fonts = () => (\n  <Global\n    styles={`\n        /* cyrillic-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvHUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n        }\n        /* cyrillic */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvOUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n        }\n        /* vietnamese */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvFUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n        }\n        /* latin-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvEUT8_DQ.woff2) format('woff2');\n          unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n        }\n        /* latin */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: italic;\n          font-weight: 800;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXQ3I6Li01BKofIMN4kYNvKUT8.woff2) format('woff2');\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n        }\n        /* cyrillic-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUbOvISTs.woff2) format('woff2');\n          unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;\n        }\n        /* cyrillic */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUZevISTs.woff2) format('woff2');\n          unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n        }\n        /* vietnamese */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUbuvISTs.woff2) format('woff2');\n          unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB;\n        }\n        /* latin-ext */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUb-vISTs.woff2) format('woff2');\n          unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n        }\n        /* latin */\n        @font-face {\n          font-family: 'Nunito';\n          font-style: normal;\n          font-weight: 900;\n          font-display: swap;\n          src: url(https://fonts.gstatic.com/s/nunito/v16/XRXW3I6Li01BKofAtsGUYevI.woff2) format('woff2');\n          unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;\n        }\n      `}\n  />\n);\n","import React from 'react';\n\nconst AlgorithmContext = React.createContext(undefined);\n\nexport default AlgorithmContext;\n","// Provided by Groolkit soon\n\nexport const COLORS = {\n  hover: 'firebrick',\n};\n\n// Generate a grid with random 0 and 1.\nexport const generate = (height, width) => {\n  let grid = [];\n\n  for (let row = 0; row < height; row++) {\n    grid.push([]);\n    for (let col = 0; col < width; col++) {\n      grid[row].push(Math.random() <= 0.2 ? 1 : 0);\n    }\n  }\n\n  return grid;\n};\n","import * as Groolkit from '@znuznu/groolkit';\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\n\nimport { Box } from '@chakra-ui/react';\n\nimport AlgorithmContext from 'contexts/AlgorithmContext';\nimport {\n  processFill,\n  processFov,\n  processLine,\n  processPath,\n} from 'services/algorithm.service';\nimport { COLORS, generate } from 'services/grid.service';\n\nconst View = () => {\n  const canvasRef = useRef(null);\n  const currentAlgorithm = useContext(AlgorithmContext);\n  const [clickSelection, setClickSelection] = useState([]);\n  const [grid, setGrid] = useState(generate(30, 30));\n  const [draw, setDraw] = useState(undefined);\n  const [currentPointerCell, setCurrentPointerCell] = useState(undefined);\n  const [tileSize, setTileSize] = useState(16);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n  }, []);\n\n  useEffect(() => {\n    if (grid && canvasRef.current.getContext('2d')) {\n      setDraw(\n        new Groolkit.Draw(canvasRef.current.getContext('2d'), grid, (n) => n, {\n          width: tileSize,\n          height: tileSize,\n        })\n      );\n    }\n  }, [grid, tileSize]);\n\n  useEffect(() => {\n    if (draw) {\n      draw.drawGrid();\n    }\n  }, [draw]);\n\n  useEffect(() => {\n    const handleAlgorithm = () => {\n      const handle = {\n        PATH: handlePath,\n        FOV: handleFov,\n        LINE: handleLine,\n        FILL: handleFill,\n      };\n\n      handle[currentAlgorithm.type]();\n    };\n\n    // Avoid drawing a trace, we're trading some perf here but it's okay\n    handleDefault();\n\n    handleAlgorithm();\n  });\n\n  useEffect(() => {\n    if (currentPointerCell) {\n      const x = currentPointerCell.x;\n      const y = currentPointerCell.y;\n\n      const canvas = canvasRef.current;\n      const context = canvas.getContext('2d');\n      context.fillStyle = COLORS.hover;\n      context.globalAlpha = 0.4;\n      context.fillRect(y * tileSize, x * tileSize, tileSize, tileSize);\n    }\n  }, [currentPointerCell, tileSize]);\n\n  const handlePath = () => {\n    if (clickSelection.length !== 2) {\n      return;\n    }\n\n    const result = processPath({\n      algorithmName: currentAlgorithm.name,\n      grid,\n      callback: (n) => n,\n      positions: clickSelection,\n    });\n\n    draw.drawPath(result, 500);\n  };\n\n  const handleLine = () => {\n    if (clickSelection.length !== 2) {\n      return;\n    }\n\n    const lineResult = processLine({\n      algorithmName: currentAlgorithm.name,\n      grid,\n      callback: (n) => n,\n      positions: clickSelection,\n    });\n\n    draw.drawLine(lineResult);\n  };\n\n  const handleFov = () => {\n    if (!clickSelection.length) {\n      return;\n    }\n\n    const fovResult = processFov({\n      algorithmName: currentAlgorithm.name,\n      grid,\n      callback: (n) => !n,\n      position: clickSelection[0],\n    });\n\n    draw.drawFov(fovResult);\n  };\n\n  const handleFill = () => {\n    if (!clickSelection.length) {\n      return;\n    }\n\n    const fillResult = processFill({\n      algorithmName: currentAlgorithm.name,\n      grid,\n      callback: (n) => n === 0,\n      position: clickSelection[0],\n    });\n\n    draw.drawFill(fillResult);\n  };\n\n  const handleDefault = () => {\n    if (draw) {\n      draw.drawGrid();\n    }\n  };\n\n  const handleClick = (event) => {\n    const [canvasX, canvasY] = getCanvasPosition(event.clientX, event.clientY);\n    const [x, y] = getCellPosition(canvasY, canvasX);\n\n    const isTwoClicksAlgorithm =\n      currentAlgorithm.type === 'PATH' || currentAlgorithm.type === 'LINE';\n\n    if (isTwoClicksAlgorithm) {\n      if (clickSelection.length !== 2) {\n        setClickSelection((clickSelection) => [...clickSelection, { x, y }]);\n      } else {\n        setClickSelection((clickSelection) => [clickSelection[1], { x, y }]);\n      }\n    } else {\n      setClickSelection([{ x, y }]);\n    }\n  };\n\n  const handleMov = (event) => {\n    const [canvasX, canvasY] = getCanvasPosition(event.clientX, event.clientY);\n    const [x, y] = getCellPosition(canvasY, canvasX);\n\n    const isNotSet = !currentPointerCell;\n\n    if (isNotSet || currentPointerCell.x !== x || currentPointerCell.y !== y) {\n      setCurrentPointerCell({ x, y });\n    }\n  };\n\n  const handleOut = () => {\n    setCurrentPointerCell(undefined);\n  };\n\n  const getCanvasPosition = (clientX, clientY) => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const canvasX = clientX - rect.left;\n    const canvasY = clientY - rect.top;\n\n    return [canvasX, canvasY];\n  };\n\n  const getCellPosition = (canvasX, canvasY) => {\n    let x = ~~(canvasX / tileSize);\n    let y = ~~(canvasY / tileSize);\n\n    return [x, y];\n  };\n\n  return (\n    <AlgorithmContext.Consumer>\n      {(value) => (\n        <>\n          <Box _hover={{ cursor: 'pointer' }}>\n            <canvas\n              ref={canvasRef}\n              onClick={handleClick}\n              onPointerMove={handleMov}\n              onPointerOut={handleOut}\n            />\n          </Box>\n        </>\n      )}\n    </AlgorithmContext.Consumer>\n  );\n};\n\nexport default View;\n","import * as Groolkit from '@znuznu/groolkit';\n\n/**\n * Return an object containing the algorithm name and his type.\n *\n * @param {string} algorithmName\n */\nexport const getAlgorithmObject = (algorithmName) => {\n  const paths = ['astar4', 'astar8', 'dijkstra4', 'dijkstra8'];\n  const fovs = ['rsc'];\n  const lines = ['lerp'];\n  const fill = ['flood'];\n\n  if (paths.includes(algorithmName)) {\n    return { name: algorithmName, type: 'PATH' };\n  } else if (fovs.includes(algorithmName)) {\n    return { name: algorithmName, type: 'FOV' };\n  } else if (lines.includes(algorithmName)) {\n    return { name: algorithmName, type: 'LINE' };\n  } else if (fill.includes(algorithmName)) {\n    return { name: algorithmName, type: 'FILL' };\n  }\n};\n\n// FIXME: replace the switches below by something sexy\n\nexport const processPath = ({ algorithmName, grid, callback, positions }) => {\n  let path = undefined;\n\n  switch (algorithmName) {\n    case 'astar4':\n      path = new Groolkit.Path.AStar(grid, { type: 4 }, callback);\n      break;\n    case 'astar8':\n      path = new Groolkit.Path.AStar(grid, { type: 8 }, callback);\n      break;\n    case 'dijkstra4':\n      path = new Groolkit.Path.Dijkstra(grid, { type: 4 }, callback);\n      break;\n    case 'dijkstra8':\n      path = new Groolkit.Path.Dijkstra(grid, { type: 8 }, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  path.init();\n  const start = positions[0];\n  const end = positions[1];\n\n  return path.search(start, end);\n};\n\nexport const processFov = ({ algorithmName, grid, callback, position }) => {\n  let fov = undefined;\n\n  switch (algorithmName) {\n    case 'rsc':\n      fov = new Groolkit.FOV.RecursiveShadowCasting(grid, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  return fov.compute(position);\n};\n\nexport const processLine = ({ algorithmName, grid, callback, positions }) => {\n  let line = undefined;\n\n  switch (algorithmName) {\n    case 'lerp':\n      line = new Groolkit.Line.LineLerp(grid, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  return line.process(positions[0], positions[1]);\n};\n\nexport const processFill = ({ algorithmName, grid, callback, position }) => {\n  let fill = undefined;\n\n  switch (algorithmName) {\n    case 'flood':\n      fill = new Groolkit.Fill.FloodFill(grid, callback);\n      break;\n    default:\n      throw new Error(`No such algorithm: '${algorithmName}'`);\n  }\n\n  return fill.process(position);\n};\n","import React from 'react';\n\nimport { Box, Heading, Select } from '@chakra-ui/react';\n\nconst Algorithms = (props) => {\n  const { changeAlgorithm } = props;\n\n  const handleChange = (e) => {\n    changeAlgorithm(e.target.value);\n  };\n\n  const optgroups = [\n    {\n      label: 'FOV',\n      options: [{ value: 'rsc', name: 'Recursive Shadow Casting' }],\n    },\n    {\n      label: 'Path',\n      options: [\n        { value: 'astar4', name: 'A* (Orthogonal)' },\n        { value: 'astar8', name: 'A* (Diagonal)' },\n        { value: 'dijkstra4', name: 'Dijkstra (Orthogonal)' },\n        { value: 'dijkstra8', name: 'Dijkstra (Diagonal)' },\n      ],\n    },\n    {\n      label: 'Filling',\n      options: [{ value: 'flood', name: 'Flood filling' }],\n    },\n    {\n      label: 'Line',\n      options: [{ value: 'lerp', name: 'Linear interpolation' }],\n    },\n  ];\n\n  return (\n    <Box maxW=\"sm\">\n      <Heading as=\"h2\" size=\"md\" display=\"inline\">\n        Algorithms\n      </Heading>\n      <Select size=\"md\" onChange={handleChange} defaultValue=\"astar4\" mt={1}>\n        {optgroups.map((groups) => (\n          <optgroup key={groups.label} label={groups.label}>\n            {groups.options.map((options) => (\n              <option key={options.value} value={options.value}>\n                {options.name}\n              </option>\n            ))}\n          </optgroup>\n        ))}\n      </Select>\n    </Box>\n  );\n};\n\nexport default Algorithms;\n","import React, { useState } from 'react';\n\nimport { Box, Flex } from '@chakra-ui/react';\n\nimport { getAlgorithmObject } from 'services/algorithm.service';\n\nimport View from './View/View';\nimport Algorithms from './Algorithms/Algorithms';\nimport AlgorithmContext from 'contexts/AlgorithmContext';\n\nconst Content = () => {\n  // todo extract to a constant\n  const [currentAlgorithm, setCurrentAlgorithm] = useState({\n    name: 'astar4',\n    type: 'PATH',\n  });\n\n  const changeAlgorithm = (algorithm) => {\n    setCurrentAlgorithm(getAlgorithmObject(algorithm));\n  };\n\n  return (\n    <Box mx=\"auto\" borderRadius=\"lg\" borderWidth=\"1px\" mt={5} p={5}>\n      <Flex mx=\"auto\">\n        <Box mr={5}>\n          <Algorithms changeAlgorithm={changeAlgorithm} />\n        </Box>\n        <AlgorithmContext.Provider value={currentAlgorithm}>\n          <View />\n        </AlgorithmContext.Provider>\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Content;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { Badge, Box, Heading } from '@chakra-ui/react';\n\nconst Title = (props) => {\n  const { title, version } = props;\n\n  return (\n    <>\n      <Box>\n        <Heading as=\"h1\" display=\"inline\" mb={10}>\n          {title}\n        </Heading>\n        <Badge ml={1} colorScheme=\"red\">\n          {version}\n        </Badge>\n      </Box>\n    </>\n  );\n};\n\nTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  version: PropTypes.string.isRequired,\n};\n\nexport default Title;\n","import React from 'react';\n\nimport { Box, Flex } from '@chakra-ui/react';\n\nimport Title from './Title/Title';\n\nconst Header = () => {\n  return (\n    <Box mx=\"auto\" borderTop=\"8px solid\" borderColor=\"red.700\">\n      <Flex mt={3} justifyContent=\"center\">\n        <Title title=\"Groolkit library demo\" version=\"0.8.0\" />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport { Code, Link, Text } from '@chakra-ui/react';\nimport { ExternalLinkIcon } from '@chakra-ui/icons';\n\nconst Explanation = () => {\n  return (\n    <>\n      <Text mt={5} mx=\"auto\" justify=\"center\">\n        <Code>Groolkit</Code> is a JavaScript library with a bunch of algorithms\n        related to grids.\n      </Text>\n      <Text mt={5} mx=\"auto\" justify=\"center\">\n        The repository is available{' '}\n        <Link\n          href=\"https://github.com/znuznu/groolkit\"\n          aria-label=\"Link to the Groolkit Github repository\"\n          isExternal\n          color=\"red.700\"\n        >\n          here\n          <ExternalLinkIcon mx=\"2px\" my=\"auto\" />\n        </Link>\n        .\n      </Text>\n    </>\n  );\n};\n\nexport default Explanation;\n","import React from 'react';\n\nimport { Flex, Icon, Text, Link } from '@chakra-ui/react';\nimport { FaGithub } from 'react-icons/fa';\n\nconst Footer = () => {\n  return (\n    <>\n      <Flex my={5} justify=\"center\" flexDir=\"column\">\n        <Flex justify=\"center\" mb={3}>\n          <Link\n            href=\"https://github.com/znuznu/gk-demo\"\n            aria-label=\"Link to the gk-demo Github repository\"\n            my=\"auto\"\n            mr={2}\n            isExternal\n          >\n            <Icon\n              as={FaGithub}\n              w={8}\n              h={8}\n              color=\"lightgrey\"\n              _hover={{ color: '#222222' }}\n            />\n          </Link>\n        </Flex>\n        <Flex justify=\"center\">\n          <Text fontStyle=\"italic\" size=\"12px\" mb={5}>\n            Groolkit is Copyright (c) - znu under MIT license\n          </Text>\n        </Flex>\n      </Flex>\n    </>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { ChakraProvider, Container, extendTheme, Flex } from '@chakra-ui/react';\n\nimport { Fonts } from 'fonts/fonts';\n\nimport Content from 'components/Content/Content';\nimport Header from 'components/Header/Header';\nimport Explanation from 'components/Explanation/Explanation';\nimport Footer from 'components/Footer/Footer';\n\nconst theme = extendTheme({\n  fonts: {\n    heading: 'Nunito',\n  },\n});\n\nfunction App() {\n  return (\n    <ChakraProvider theme={theme}>\n      <Fonts />\n      <Header />\n      <Container justifyContent=\"center\" h=\"100%\" maxW=\"6xl\">\n        <Flex flexDir=\"column\">\n          <Explanation />\n          <Content />\n          <Footer />\n        </Flex>\n      </Container>\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","import { ColorModeScript } from '@chakra-ui/react';\nimport React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <StrictMode>\n    <ColorModeScript />\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}